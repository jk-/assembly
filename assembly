Assembly Language:
For x86 Processors Sixth Edition

Kip R. Irvine

Chapter 1: Basic Concepts

MSB and LSB

Most significant bit
and Least significant bit

Most is on the left
Least is on the right

Integer Storage Types

byte        8-bits
word        16-bits
doubleword  32-bits
quadword    64-bits

A "word" is not "a word"

Unsigned Ranges:

byte        0-255
word        0-65535
doubleword  0-4294967295
quadword    0-18446744073709551615

Signed:
The MSB is the sign bit which tells us if the number is positive or negative.
0: positive
1: negative

Ranges:
byte        -128 to 127
word        -32768 to 32767
doubleword  -214744836448 to 2 billion
quadword    blah

Two's Complement Notation:
Trying to tell us that everything can be done by addition.

Steps:
Flip-bits (1's comp)
Add 1

1.4 Boolean Operations

NOT: ¬
AND: ∧
OR: ∨

"Order of operations":
NOT is first before parentheses

2.0 General Concepts

2.1.1 Basic Microcomputer Design

Contains:
Registers are contained in the CPU (limited number)

A high-frequency clock
A control unit
And an arithmetic logic unit

Clock: synchronizes the internal operations of the CPU with other system components.

Control Unit (CU): coordinates the sequence of steps involved in executing machine instructions.

Arithemtic logic unit (ALU): performs arithmetic operations.

CPU pins connect to the data bus, the control bus and the address bus.

The Memory Storage Unit (MSU) is where instructions and data are held while the computer program is running.

All processing of data takes place in the CPU. Programs residing in memory must be copied into the CPU before they can excute.

Bus: is a group of parallel wires that transfer data from one part of the computer to another.

There are usually four bus types:
Data
I/O
Control
Address


Data bus transfers instructions between the CPU and memory.

The I/O bus transfer bus data between the CPU and system inputs.

The control bus uses binary signals to sync actions of all devices attached to the system bus.

The address bus holds the addresses of instructions and data when the currently execting instruction transfer data between the CPU and memory.

CLOCK
Pulses at a constant rate. The basic unit of time is a "Machine Cycle" or "Clock Cycle". The length of the clock cycle is the time required for one compelte clock pulse.

A clock cycle is the time between one falling cycle and the next. (lambda in math λ).

The duration of a clock cycle is calc as the reciprocal of the clocks speed, which in turn measures in oscillations per second.

1 Billion times per second: 1GHz.

A machine cycle requires at leastt 1 clock cycle to execute and a few require in excess of 50 clocks).

Instructions requiring memory access often have empty clock cycles called wait states because of the differences in the speeds of the CPU, the system bus and memory circuits.


2.1.2 Instruction Execution Cycle

The execution of a single machine instruction can be divided into a sequence of individual operations called INSTRUCTION EXECUTION CYCLES.

Before executing a program is copied into memory.

The INSTRUCTION POINTER contains the address of the next instructions.

The INSTRUCTION QUEUE holds a group of instructions about to be executed.

Three basic types:
Fetch
Decode
Execute

When using memory, two more steps are required:
Fetch Operand
Store output operand

Fetch: The control unit (CU) fetches the next instruction from the queue and increments the pointer. Also called a program counter.

Decode: The control unit decodes the instructions function to determine what the instruction will do. The instructions input operands are passed to the ALU, and singals are sent to the ALU indicating the operation tobe performed.

Fetch Operand: If the instruction uses an input operand located in memory, the control unit uses a READ operation to retrive the operand and copy it into internal registers. Internal registers are not visible to programs.

Execute: The ALU executes the instructions using the named registers and internal registers as operands and sends the output to named reggisters and or memory. The ALU updates status flags providing inofmration about the processor state.
Store Output operand: If the output operand is in memory, the control unit uses a write operation to store the data.

loop
    fetch next instruction
    advanced the instruction pointer (IP)
    if memory needed, val memory
    execute instruction
    if result is memory, write resultt
continue loop

In order to read instructiosn from memory, an address is palced on the address bus.
next, The memory controller places the req  uested code on the data bus, making the code avail inside the code cache.
Instruction Pointer (IP) determines which instruction will be executed next.
